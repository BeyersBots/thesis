install.packages('tidyverse')
install.packages('plotly')
devtools::install_github('hadley/ggplot2')
install.packages('devtools')
devtools::install_github('hadley/ggplot2')
install.packages('scales')
col_names = c("Date", "True Positives", "False Positives", "False Negatives", "Events Logged", "Events Identified")
ble_16Aug = c("8/16/17", "0", "0")
clearPushBack()
clean
del
rm (ble_16Aug)
rm(col_names)
clear
setwd("~/Documents_not_for_cloud/thesis/captures/trial_2/Results")
ble_results <- read.csv("BLE_Results.csv")
ble_results
ble_results$Date
ble_results2 <- read.csv("BLE_Results.csv")
ble_results2
ble_results2$EISR <- ble_results2$True.Positives/ble_results2$Events.Logged
ble_results2
ble_results2$EISR <- ble_results2$True.Positives/ble_results2$Events.Logged*100
ble_results2
rm(ble_results2)
mean(ble_results2$EISR)
mean(ble_results$EISR)
mean(ble_results$EISR, na.omit(x))
mean(ble_results$EISR, na.omit(NaN))
mean(ble_results$EISR, na.rm=TRUE)
ble_results$EISR
ble_results <- read.csv("BLE_Results.csv")
ble_results$EISR
ble_results
ble_results <- read.csv("BLE_Results.csv")
ble_results
mean(ble_results$EISR, na.rm=TRUE)
mean(ble_results$EIFN, na.rm=TRUE)
t.test(ble_results$EISR, var.equal = T)
t.test(ble_results$EIFP, var.equal = T)
t.test(ble_results$EIFN, var.equal = T)
summary(ble_results)
ble_results
power.t.test
View(ble_results)
ggplot(ble_results, aes(x=Date, y =EISR)) + geom_boxplot() + geom_jitter(alpha=.1, shape=16, size=.5) + labs(size=4, x="Date", y="Success Rate")+ theme_bw() + theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"))
library(tidyverse)
ggplot(ble_results, aes(x=Date, y =EISR)) + geom_boxplot() + geom_jitter(alpha=.1, shape=16, size=.5) + labs(size=4, x="Date", y="Success Rate")+ theme_bw() + theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"))
wifi_results <- read.csv("WIFI_Results.csv")
ggplot(wifi_results, aes(x=Date, y =EISR)) + geom_boxplot() + geom_jitter(alpha=.1, shape=16, size=.5) + labs(size=4, x="Date", y="Success Rate")+ theme_bw() + theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"))
sd (ble_results$EISR)
summary(ble_results)
summary(ble_results$EISR)
ci
plot(summar(ble_results$EISR))
plot(summary(ble_results$EISR))
ggplot(wifi_results, aes(factor(Date), EISR)) + geom_boxplot() + geom_jitter(alpha-.2, shape=16, size=1) + labs(size=4, x="Trial Date", y ="Success Rate") + theme_bw()
ggplot(wifi_results, aes(factor(Date), EISR)) + geom_boxplot() + geom_jitter(alpha=.2, shape=16, size=1) + labs(size=4, x="Trial Date", y ="Success Rate") + theme_bw()
combined_results = rbind(wifi_results, ble_results)
combined-results
combined_results
ble_results$Type <- "BLE"
wifi_results$Type <- "BLE"
ble_results
combined_results = rbind(wifi_results, ble_results)
combined_results
wifi_results$Type <- "WIFI"
combined_results = rbind(wifi_results, ble_results)
combined_results
ggplot(combined_results, aes(x=Type,y=EISR)) + geom_boxplot() + geom_jitter(alpha=.1, shape=16, size=.5)
mean(ble_results$EISR, na.rm=TRUE)
mean(wifi_results$EISR, na.rm=TRUE)
ggplot(combined_results, aes(x=Type,y=EISR)) + geom_boxplot() + geom_jitter(alpha=.1, shape=16, size=.5) + labs(size=4, x ="Type", y="Success Rate") + theme_bw() + theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"))
t.test(ble_results$EISR, var.equal=T)
confInterval <- 0.96
confInterval <- 0.975
sem <- sd(wifi_results$EISR)/sqrt(length(wifi_results$EISR))
sem
94.83324-85.72399
103.9428-94.83324
df.residual(wifi_results$EISR)
df.residual(wifi_results)
qt(confInterval)*sem
qt(confInterval,df=1)*sem
qt(confInterval,df=2)*sem
qt(confInterval,df=3)*sem
2*sem
mean(wifi_results$EISR)
t.test(wifi_results$EISR, var.equal=T)
93.69557-86.50993
sd(wifi_results$EISR, na.rm=TRUE)/sqrt(length(wifi_results$EISR[!is.na(wifi_results$EISR)]))
sem
sd(wifi_results$EISR, na.rm=TRUE)
wifi_results
install.packages(("psych"))
install.packages(("psych"))
describe(wifi_results$EISR)
library(psych)
describe(wifi_results$EISR)
describe(wifi_results)
describe(ble_results)
sem
wifi_results$ci<- sem
wifi_results
sem2 <- sd(ble_results$EISR, na.rm=TRUE)/sqrt(length(bke_results$EISR[!is.na(ble_results$EISR)]))
sem2 <- sd(ble_results$EISR, na.rm=TRUE)/sqrt(length(ble_results$EISR[!is.na(ble_results$EISR)]))
ble_results$ci <- sem2
ggplot(combined_results, aes(x= type, y=EISR)) + geom_errorbar(aes(ymin=EISR-ci, ymax=EISR+ci), width=.5)
combined_results = rbind(wifi_results, ble_results)
ggplot(combined_results, aes(x= type, y=EISR)) + geom_errorbar(aes(ymin=EISR-ci, ymax=EISR+ci), width=.5)
combined_results
ggplot(combined_results, aes(x= Type, y=EISR)) + geom_errorbar(aes(ymin=EISR-ci, ymax=EISR+ci), width=.5)
ggplot(combined_results, aes(x= Type, y=EISR)) + geom_errorbar(aes(ymin=EISR-ci, ymax=EISR+ci), width=.5) + geom_point()
summarySE
summarySE()
library(ggplot2)
library(plyr)
summarySE()
summary(combined_results, measurevar = "EISR", groupvars=c("Type"))
summary(wifi_results, measurevar = "EISR", groupvars=c("Type"))
wifi_results
wifiSE = summary(wifi_results, measurevar = "EISR", groupvars = c("Type"))
wifiSE
wifiSE = summarySE(wifi_results, measurevar = "EISR", groupvars = c("Type"))
library(ggplot2)
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
wifiSE = summarySE(wifi_results, measurevar = "EISR", groupvars = c("Type"))
wifiSE
bleSE = summarySE(ble_results, measurevar = "EISR", groupvars = c("Type"))
bleSE
bleSE = summarySE(ble_results, measurevar = "EISR", groupvars = c("Type"), na.rm=TRUE)
bleSE
combinedSE = rbind(bleSE, wifiSE)
combinedSE
wifi_results
ble_results
combinedSE$Type
ggplot(combinedSE, aes(x=Type, y=EISR)) + geom_errorbar(aes(ymin=EISR-ci, ymax=EISR+ci), width=.5) + geom_point()
table(combinedSE)
table(bleSE
)
save.image("~/Documents_not_for_cloud/thesis/captures/trial_2/Results/results.RData")
combinedSE$Type
bleSE
table(A,B)
attach combined_results
attach(combinedSE)
mytable <- table(A, B)
mytable <- table(2, 5)
combinedSE.table(mytable, 1)
mytable <- table(bleSE, wifiSE)
bleSE
wifiSE
ftable(mytable)
bleSE
combinedSE
tables(combinedSE$Type, combined$SE)
table(combinedSE$Type, combined$SE)
table(combinedSE$Type, combinedSE)
combinedSE.colnmaes
combinedSE.colnames()
colnames(combinedSE)
rownames(combinedSE)
rownames(combinedSE) <- combinedSE$Type
combinedSETable <- as.table(combinedSE)
combinedSE
type(combinedSE)
class(combinedSE)
View(combinedSE)
View(combinedSE)
View(combined_results)
View(combined_results)
View(ble_results)
View(ble_results)
wifiSE = summarySE(wifi_results, measurevar = "EISR", groupvars = c("Type"))
ble_results <- read.csv("BLE_Results.csv")
ble_results$Type <- "BLE"
wifi_results <- read.csv("WIFI_Results.csv")
wifi_results$Type <- "WIFI"
total_results <- read.csv("TOTAL_results.csv")
total_results$Type <- "TOTAL"
View(total_results)
wifi_results
ble_results <- read.csv("BLE_Results.csv")
ble_results$Type <- "BLE"
wifi_results <- read.csv("WIFI_Results.csv")
wifi_results$Type <- "WIFI"
total_results <- read.csv("TOTAL_results.csv")
total_results$Type <- "TOTAL"
combined_results = rbind(wifi_results, ble_results, total_results)
wifi_results
t.test(wifi_results$EISR, var.equal = T)
t.test(wifi_results$EISR)
t.test(wifi_results$EISR, var.equal = F)
t.test(wifi_results$EISR, var.equal = T)
ble_results <- read.csv("BLE_Results.csv")
ble_results$Type <- "BLE"
wifi_results <- read.csv("WIFI_Results.csv")
wifi_results$Type <- "WIFI"
total_results <- read.csv("TOTAL_results.csv")
total_results$Type <- "TOTAL"
View(wifi_results)
View(wifi_results)
ble_results <- read.csv("BLE_Results.csv")
ble_results$Type <- "BLE"
wifi_results <- read.csv("WIFI_Results.csv")
wifi_results$Type <- "WIFI"
total_results <- read.csv("TOTAL_results.csv")
total_results$Type <- "TOTAL"
View(wifi_results)
View(wifi_results)
