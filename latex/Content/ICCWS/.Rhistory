knitr::opts_chunk$set(echo = TRUE)
library('igraph')
nodes <- read.csv("network_node_file.csv", header=T, as.is=T)
links <- read.csv("network_edge_file.csv", header=T, as.is=T)
net <-graph_from_data_frame(d=links, vertices=nodes, directed=T)
colrs <- c("steelblue2", "tomato", "gold", "green")
V(net)$color <- colrs[V(net)$device.type]
E(net)$width <- E(net)$weight/4000000
l <- layout_in_circle(net)
plot(net, layout=l, vertex.label=V(net)$device.label, edge.arrow.size=0)
V(net)
nodes <- read.csv("network_node_file.csv", header=T, as.is=T)
links <- read.csv("network_edge_file.csv", header=T, as.is=T)
net <-graph_from_data_frame(d=links, vertices=nodes, directed=T)
colrs <- c("steelblue2", "tomato", "gold", "green")
V(net)$color <- colrs[V(net)$device.type]
V(net)
E(net)$width <- E(net)$weight/4000000
l <- layout_in_circle(net)
plot(net, layout=l, vertex.label=V(net)$device.label, edge.arrow.size=0, vertex.frame.color="#ffffff")
nodes <- read.csv("network_node_file.csv", header=T, as.is=T)
links <- read.csv("network_edge_file.csv", header=T, as.is=T)
net <-graph_from_data_frame(d=links, vertices=nodes, directed=T)
colrs <- c("steelblue2", "tomato", "gold", "green")
V(net)$color <- colrs[V(net)$device.type]
V(net)
E(net)$width <- E(net)$weight/4000000
l <- layout_in_circle(net)
plot(net, layout=l, vertex.label=V(net)$device.label, edge.arrow.size=0, vertex.frame.color="#ffffff", vertex.label.color="black")
plot(net, layout=l, vertex.label=V(net)$device.label, edge.arrow.size=0, vertex.frame.color="#ffffff", vertex.label.color="black")
event_lot_1_final$Time %in% log_plot_1_final$Time
event_plot_1_final$Time %in% log_plot_1_final$Time
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(plotly)
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-23.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-23.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M %ZAmerica/Chicago")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
#temp_log_time <- c(log_plot_1$Time - 60, log_plot_1$Time, log_plot_1$Time + 60)
#temp_log_time
#attr(temp_log_time, "tzone") <- "UTC"
#temp_log_time
occurrences<-table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))
occurrences
log_plot_1final$Time
log_plot_1_final$Time
event_plot_1_final$Time
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-23.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-23.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
#temp_log_time <- c(log_plot_1$Time - 60, log_plot_1$Time, log_plot_1$Time + 60)
#temp_log_time
#attr(temp_log_time, "tzone") <- "UTC"
#temp_log_time
#temp_log_time
occurrences<-table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))
occurrences
occurrences2<-table(unlist(event_plot_1_final$Time %in% log_plot_1_final$Time))
occurrences2
occurrences2$FALSE
occurrences2[0]
occurrences2[1]
occurrences2[2]
false_negatives <- table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))[0]
false_negatives
false_negatives <- table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))[1]
false_negatives
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-23.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-23.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
occurrences <-table(unlist(event_plot_1_final$Time %in% log_plot_1_final$Time))
true_positives <- occurrences[2]
false_positives <- occurrences[1]
true_positives
false_positives
false_negatives <- table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))[1]
false_negatives
#temp_log_time <- c(log_plot_1$Time - 60, log_plot_1$Time, log_plot_1$Time + 60)
#temp_log_time
#attr(temp_log_time, "tzone") <- "UTC"
#temp_log_time
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-16.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-16-23.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-16.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-16.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-23.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-23.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
occurrences <-table(unlist(event_plot_1_final$Time %in% log_plot_1_final$Time))
true_positives <- occurrences[2]
false_positives <- occurrences[1]
true_positives
false_positives
false_negatives <- table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))[1]
false_negatives
#temp_log_time <- c(log_plot_1$Time - 60, log_plot_1$Time, log_plot_1$Time + 60)
#temp_log_time
#attr(temp_log_time, "tzone") <- "UTC"
#temp_log_time
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-16.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-16.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
View(event_plot_1_final)
View(event_plot_1_final)
View(log_plot_1_final)
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-16.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-16.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
occurrences <-table(unlist(event_plot_1_final$Time %in% log_plot_1_final$Time))
true_positives <- occurrences[2]
false_positives <- occurrences[1]
true_positives
false_positives
false_negatives <- table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))[1]
false_negatives
#temp_log_time <- c(log_plot_1$Time - 60, log_plot_1$Time, log_plot_1$Time + 60)
#temp_log_time
#attr(temp_log_time, "tzone") <- "UTC"
#temp_log_time
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-22.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-22.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
occurrences <-table(unlist(event_plot_1_final$Time %in% log_plot_1_final$Time))
true_positives <- occurrences[2]
false_positives <- occurrences[1]
true_positives
false_positives
false_negatives <- table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))[1]
false_negatives
#temp_log_time <- c(log_plot_1$Time - 60, log_plot_1$Time, log_plot_1$Time + 60)
#temp_log_time
#attr(temp_log_time, "tzone") <- "UTC"
#temp_log_time
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-25.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-25.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
occurrences <-table(unlist(event_plot_1_final$Time %in% log_plot_1_final$Time))
true_positives <- occurrences[2]
false_positives <- occurrences[1]
true_positives
false_positives
false_negatives <- table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))[1]
false_negatives
#temp_log_time <- c(log_plot_1$Time - 60, log_plot_1$Time, log_plot_1$Time + 60)
#temp_log_time
#attr(temp_log_time, "tzone") <- "UTC"
#temp_log_time
myCols <- c("Time", "Device", "Value", "Title")
log_file_1 = 'log_2017-08-26.csv'
log_plot_1 <- read_csv(log_file_1, col_names = c("Time", "Device", "Event"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M"), Device = col_character(), Event = col_character()),  na = ".")
log_plot_1$Value <- rep(1, nrow(log_plot_1))
log_plot_1$Title <- rep("Log", nrow(log_plot_1))
log_plot_1_final <- log_plot_1[myCols]
log_plot_1$Time
event_file_1 = 'event_id_2017-08-26.csv'
event_plot_1 <- read_csv(event_file_1, col_names = c("Time", "Device",  "Destination", "Value"), col_types = cols(Time = col_datetime("%m/%d/%y %H:%M")), na = ".")
event_plot_1$Title <- rep("IoTCIT", nrow(event_plot_1))
event_plot_1_final <- event_plot_1[myCols]
data <- rbind(log_plot_1_final, event_plot_1_final)
plot_1 <- ggplot(data) + geom_point(mapping = aes(Time, Value, color=Title, shape=Title, size = Title, label = Time, text = paste("Device: ", Device))) + scale_shape_manual(values=c(8, 1)) + scale_size_manual(values=c(2, 4))
ggplotly(plot_1, tooltip = c('text','label'))
occurrences <-table(unlist(event_plot_1_final$Time %in% log_plot_1_final$Time))
true_positives <- occurrences[2]
false_positives <- occurrences[1]
true_positives
false_positives
false_negatives <- table(unlist(log_plot_1_final$Time %in% event_plot_1_final$Time))[1]
false_negatives
#temp_log_time <- c(log_plot_1$Time - 60, log_plot_1$Time, log_plot_1$Time + 60)
#temp_log_time
#attr(temp_log_time, "tzone") <- "UTC"
#temp_log_time
events <- nrow(log_plot_1_final)
events
